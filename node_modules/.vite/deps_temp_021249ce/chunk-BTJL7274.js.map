{
  "version": 3,
  "sources": ["../../primevue/badge/badge.esm.js"],
  "sourcesContent": ["import BaseComponent from 'primevue/basecomponent';\nimport { useStyle } from 'primevue/usestyle';\nimport { ObjectUtils } from 'primevue/utils';\nimport { openBlock, createElementBlock, mergeProps, renderSlot, createTextVNode, toDisplayString } from 'vue';\n\nvar styles = \"\\n.p-badge {\\n    display: inline-block;\\n    border-radius: 10px;\\n    text-align: center;\\n    padding: 0 .5rem;\\n}\\n\\n.p-overlay-badge {\\n    position: relative;\\n}\\n\\n.p-overlay-badge .p-badge {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    transform: translate(50%,-50%);\\n    transform-origin: 100% 0;\\n    margin: 0;\\n}\\n\\n.p-badge-dot {\\n    width: .5rem;\\n    min-width: .5rem;\\n    height: .5rem;\\n    border-radius: 50%;\\n    padding: 0;\\n}\\n\\n.p-badge-no-gutter {\\n    padding: 0;\\n    border-radius: 50%;\\n}\\n\";\nvar classes = {\n  root: function root(_ref) {\n    var props = _ref.props,\n      instance = _ref.instance;\n    return ['p-badge p-component', {\n      'p-badge-no-gutter': ObjectUtils.isNotEmpty(props.value) && String(props.value).length === 1,\n      'p-badge-dot': ObjectUtils.isEmpty(props.value) && !instance.$slots[\"default\"],\n      'p-badge-lg': props.size === 'large',\n      'p-badge-xl': props.size === 'xlarge',\n      'p-badge-info': props.severity === 'info',\n      'p-badge-success': props.severity === 'success',\n      'p-badge-warning': props.severity === 'warning',\n      'p-badge-danger': props.severity === 'danger'\n    }];\n  }\n};\nvar _useStyle = useStyle(styles, {\n    name: 'badge',\n    manual: true\n  }),\n  loadStyle = _useStyle.load;\nvar script$1 = {\n  name: 'BaseBadge',\n  \"extends\": BaseComponent,\n  props: {\n    value: {\n      type: [String, Number],\n      \"default\": null\n    },\n    severity: {\n      type: String,\n      \"default\": null\n    },\n    size: {\n      type: String,\n      \"default\": null\n    }\n  },\n  css: {\n    classes: classes,\n    loadStyle: loadStyle\n  },\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Badge',\n  \"extends\": script$1\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"span\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptm('root'), {\n    \"data-pc-name\": \"badge\"\n  }), [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.value), 1)];\n  })], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAKA,IAAI,SAAS;AACb,IAAI,UAAU;AAAA,EACZ,MAAM,SAAS,KAAK,MAAM;AACxB,QAAI,QAAQ,KAAK,OACf,WAAW,KAAK;AAClB,WAAO,CAAC,uBAAuB;AAAA,MAC7B,qBAAqB,YAAY,WAAW,MAAM,KAAK,KAAK,OAAO,MAAM,KAAK,EAAE,WAAW;AAAA,MAC3F,eAAe,YAAY,QAAQ,MAAM,KAAK,KAAK,CAAC,SAAS,OAAO,SAAS;AAAA,MAC7E,cAAc,MAAM,SAAS;AAAA,MAC7B,cAAc,MAAM,SAAS;AAAA,MAC7B,gBAAgB,MAAM,aAAa;AAAA,MACnC,mBAAmB,MAAM,aAAa;AAAA,MACtC,mBAAmB,MAAM,aAAa;AAAA,MACtC,kBAAkB,MAAM,aAAa;AAAA,IACvC,CAAC;AAAA,EACH;AACF;AACA,IAAI,YAAY,SAAS,QAAQ;AAAA,EAC7B,MAAM;AAAA,EACN,QAAQ;AACV,CAAC;AAHH,IAIE,YAAY,UAAU;AACxB,IAAI,WAAW;AAAA,EACb,MAAM;AAAA,EACN,WAAW;AAAA,EACX,OAAO;AAAA,IACL,OAAO;AAAA,MACL,MAAM,CAAC,QAAQ,MAAM;AAAA,MACrB,WAAW;AAAA,IACb;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AAAA,EACF;AAAA,EACA,KAAK;AAAA,IACH;AAAA,IACA;AAAA,EACF;AAAA,EACA,SAAS,SAAS,UAAU;AAC1B,WAAO;AAAA,MACL,iBAAiB;AAAA,IACnB;AAAA,EACF;AACF;AAEA,IAAIA,UAAS;AAAA,EACX,MAAM;AAAA,EACN,WAAW;AACb;AAEA,SAAS,OAAO,MAAM,QAAQ,QAAQ,QAAQ,OAAO,UAAU;AAC7D,SAAO,UAAU,GAAG,mBAAmB,QAAQ,WAAW;AAAA,IACxD,SAAS,KAAK,GAAG,MAAM;AAAA,EACzB,GAAG,KAAK,IAAI,MAAM,GAAG;AAAA,IACnB,gBAAgB;AAAA,EAClB,CAAC,GAAG,CAAC,WAAW,KAAK,QAAQ,WAAW,CAAC,GAAG,WAAY;AACtD,WAAO,CAAC,gBAAgB,gBAAgB,KAAK,KAAK,GAAG,CAAC,CAAC;AAAA,EACzD,CAAC,CAAC,GAAG,EAAE;AACT;AAEAA,QAAO,SAAS;",
  "names": ["script"]
}
