{
  "version": 3,
  "sources": ["../../primevue/badgedirective/badgedirective.esm.js"],
  "sourcesContent": ["import { UniqueComponentId, DomHandler } from 'primevue/utils';\nimport BaseDirective from 'primevue/basedirective';\nimport { useStyle } from 'primevue/usestyle';\n\nvar styles = \"\\n.p-badge {\\n    display: inline-block;\\n    border-radius: 10px;\\n    text-align: center;\\n    padding: 0 .5rem;\\n}\\n\\n.p-overlay-badge {\\n    position: relative;\\n}\\n\\n.p-overlay-badge .p-badge {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    transform: translate(50%,-50%);\\n    transform-origin: 100% 0;\\n    margin: 0;\\n}\\n\\n.p-badge-dot {\\n    width: .5rem;\\n    min-width: .5rem;\\n    height: .5rem;\\n    border-radius: 50%;\\n    padding: 0;\\n}\\n\\n.p-badge-no-gutter {\\n    padding: 0;\\n    border-radius: 50%;\\n}\\n\";\nvar classes = {\n  root: 'p-badge p-component'\n};\nvar _useStyle = useStyle(styles, {\n    name: 'badge',\n    manual: true\n  }),\n  loadStyle = _useStyle.load;\nvar BaseBadgeDirective = BaseDirective.extend({\n  css: {\n    classes: classes,\n    loadStyle: loadStyle\n  }\n});\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar BadgeDirective = BaseBadgeDirective.extend('badge', {\n  mounted: function mounted(el, binding) {\n    var _binding$instance$$pr, _binding$value;\n    var id = UniqueComponentId() + '_badge';\n    el.unstyled = ((_binding$instance$$pr = binding.instance.$primevue) === null || _binding$instance$$pr === void 0 || (_binding$instance$$pr = _binding$instance$$pr.config) === null || _binding$instance$$pr === void 0 ? void 0 : _binding$instance$$pr.unstyled) || ((_binding$value = binding.value) === null || _binding$value === void 0 ? void 0 : _binding$value.unstyled) || false;\n    var badge = DomHandler.createElement('span', {\n      id: id,\n      \"class\": !el.unstyled && this.cx('root'),\n      'p-bind': this.ptm('root')\n    });\n    el.$_pbadgeId = badge.getAttribute('id');\n    for (var modifier in binding.modifiers) {\n      !el.unstyled && DomHandler.addClass(badge, 'p-badge-' + modifier);\n    }\n    if (binding.value != null) {\n      if (_typeof(binding.value) === 'object') el.$_badgeValue = binding.value.value;else el.$_badgeValue = binding.value;\n      badge.appendChild(document.createTextNode(el.$_badgeValue));\n      if (String(el.$_badgeValue).length === 1 && !el.unstyled) {\n        !el.unstyled && DomHandler.addClass(badge, 'p-badge-no-gutter');\n      }\n    } else {\n      !el.unstyled && DomHandler.addClass(badge, 'p-badge-dot');\n    }\n    el.setAttribute('data-pd-badge', true);\n    !el.unstyled && DomHandler.addClass(el, 'p-overlay-badge');\n    el.setAttribute('data-p-overlay-badge', 'true');\n    el.appendChild(badge);\n    this.$el = badge;\n  },\n  updated: function updated(el, binding) {\n    !el.unstyled && DomHandler.addClass(el, 'p-overlay-badge');\n    el.setAttribute('data-p-overlay-badge', 'true');\n    if (binding.oldValue !== binding.value) {\n      var badge = document.getElementById(el.$_pbadgeId);\n      if (_typeof(binding.value) === 'object') el.$_badgeValue = binding.value.value;else el.$_badgeValue = binding.value;\n      if (!el.unstyled) {\n        if (el.$_badgeValue) {\n          if (DomHandler.hasClass(badge, 'p-badge-dot')) DomHandler.removeClass(badge, 'p-badge-dot');\n          if (el.$_badgeValue.length === 1) DomHandler.addClass(badge, 'p-badge-no-gutter');else DomHandler.removeClass(badge, 'p-badge-no-gutter');\n        } else if (!el.$_badgeValue && !DomHandler.hasClass(badge, 'p-badge-dot')) {\n          DomHandler.addClass(badge, 'p-badge-dot');\n        }\n      }\n      badge.innerHTML = '';\n      badge.appendChild(document.createTextNode(el.$_badgeValue));\n    }\n  }\n});\n\nexport { BadgeDirective as default };\n"],
  "mappings": "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",
  "names": ["obj"]
}
